from __future__ import unicode_literals


app_id = 5556034 #идентификатор приложения
protected_key='F0eYCZDPxh4rtawBEca5'

import vk
import requests


'''
req = 'https://oauth.vk.com/authorize'
reqq = 'client_id=5556034&display=page&redirect_uri=http://example.com/callback&scope=friends&response_type=token&v=5.53&state=123456'

vkapi = vk.API(app_id, 'agr39@ya.ru')
#vkapi.access_token=s
resp = requests.request(req, reqq)
print(vkapi.__dict__)
vkapi.wall.post(message="Hello, world")

'''

import pprint
from urllib.parse import parse_qs
import webbrowser
import pickle
from datetime import datetime, timedelta
import vk
import time

# id of vk.com application
APP_ID = app_id
# file, where auth data is saved
AUTH_FILE = '.auth_data'
# chars to exclude from filename
FORBIDDEN_CHARS = '/\\\?%*:|"<>!'

def get_saved_auth_params():
    access_token = None
    user_id = None
    try:
        with open(AUTH_FILE, 'rb') as pkl_file:
            token = pickle.load(pkl_file)
            expires = pickle.load(pkl_file)
            uid = pickle.load(pkl_file)
        if datetime.now() < expires:
            access_token = token
            user_id = uid
    except IOError:
        pass
    return access_token, user_id


def save_auth_params(access_token, expires_in, user_id):
    expires = datetime.now() + timedelta(seconds=int(expires_in))
    with open(AUTH_FILE, 'wb') as output:
        pickle.dump(access_token, output)
        pickle.dump(expires, output)
        pickle.dump(user_id, output)


def get_auth_params():
    auth_url = ("https://oauth.vk.com/authorize?client_id={app_id}"
                "&scope=wall,messages,audio&redirect_uri=http://oauth.vk.com/blank.html"
                "&display=page&response_type=token".format(app_id=APP_ID))
    webbrowser.open_new_tab(auth_url)
    redirected_url = input("Paste here url you were redirected:\n")
    aup = parse_qs(redirected_url)
    aup['access_token'] = aup.pop(
        'https://oauth.vk.com/blank.html#access_token')
    save_auth_params(aup['access_token'][0], aup['expires_in'][0],
                     aup['user_id'][0])
    return aup['access_token'][0], aup['user_id'][0]

'''
def get_for_audio_token():
    auth_url = ("https://oauth.vk.com/authorize?client_id={app_id}"
                "&scope=wall,messages&redirect_uri=http://oauth.vk.com/blank.html"
                "&display=page&response_type=token".format(app_id=APP_ID))
    webbrowser.open_new_tab(auth_url)
    redirected_url = input("Paste here url you were redirected:\n")
    aup = parse_qs(redirected_url)
    aup['access_token'] = aup.pop(
        'https://oauth.vk.com/blank.html#access_token')
    save_auth_params(aup['access_token'][0], aup['expires_in'][0],
                     aup['user_id'][0])
    return aup['access_token'][0], aup['user_id'][0]
'''

def get_api(access_token):
    session = vk.Session(access_token=access_token)
    return vk.API(session)


def send_message(api, user_id, message, **kwargs):
    data_dict = {
        'user_id': user_id,
        'message': message,
    }
    data_dict.update(**kwargs)
    return api.messages.send(**data_dict)


def get_user_or_group_info(api, nick_or_id):
    if nick_or_id.isalpha() == True:
        nick = nick_or_id + ','
        print(nick)
        res = api.groups.getById(group_ids = nick)
        #res = api.users.get(user_ids = nick)
        #print(res)
        return res[0]['gid']

def get_user_info(api, nick_or_id):
    res = api.users.get(user_ids = nick_or_id)
    return res


def get_audio_id(api, owner_id):
    res = api.audio.get(owner_id= owner_id)
    print(res)


brunko_id = '368514350'
gorkiy_group_id='-41360940'
volni_veter_uid = 131303037
agr_id = 32007325
gorkiy_id = 18629696

attachments = ['audio-41360940_426516897','audio-41360940_327478545', 'audio-41360940_456239024', 'audio-41360940_456239022', 'photo-41360940_378305307']
def post_wall_message(api, owner_id, message, attachments, **kwargs):
    data_dict = {
        'owner_id': owner_id,
        'message': message,
        'attachments': attachments
    }
    data_dict.update(**kwargs)
    return api.wall.post(**data_dict)

def main():
    access_token, _ = get_saved_auth_params()
    if not access_token or not _:
        access_token, _ = get_auth_params()
    api = get_api(access_token)
    
    users = ['18629696'] # список с идентификаторами пользователей
    user_text = "Добрый день!!!Мааакс ) Не судите, пожалуйста, строго! )) https://vk.com/gorkyvery"
    for user_id in users:
        print("User ", user_id)
        #api.wall.post(message="Hello, world")
        res_of_members_of_group = api.groups.getMembers(group_id='rock_spb_ru')

        #gid = get_user_or_group_info(api, 'gorkyvery')
        get_audio_id(api, gorkiy_group_id)
        res = get_user_info(api, ['gorky_official'])
        #res_of_posting_to_wall = post_wall_message(api, owner_id=users[0], message='Слушайте новую песню Горького ... https://vk.com/gorkyvery',attachments =attachments)
        #res = send_message(api, user_id=user_id, message=user_text, attachment=attachments)
        time.sleep(1)
        #print(gid)
        print(res_of_members_of_group)
        #print (res2)

main()
